security:
    # Password hashers
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Providers: How users are loaded
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: emailUser
            
        users_in_memory: { memory: null }

    # Firewalls: Define access rules for different parts of the site
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            user_checker: App\Security\UserChecker
            access_denied_handler: App\Security\AccessDeniedHandler
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                success_handler: App\Security\LoginSuccessHandler
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /
                remember_me_parameter: '_remember_me'
            logout:
                path: app_logout
                target: Front
            entry_point: form_login
            custom_authenticators:
                - App\Security\GoogleAuthenticator
                - App\Security\FaceAuthenticator
           
    # Access Control: Control access based on roles
    
        # Add any additional access rules here
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # Custom password hashing for test environment (lower resources)
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4  # Lowest possible value for bcrypt
                time_cost: 3  # Lowest possible value for argon
                memory_cost: 10  # Lowest possible value for argon

        firewalls:
            main:
                pattern: ^/
                lazy: true
                provider: app_user_provider
                custom_authenticators:
                    - App\Security\FaceAuthenticator