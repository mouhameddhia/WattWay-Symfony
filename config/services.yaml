parameters:
  profile_pictures_directory: '%kernel.project_dir%/public/uploads/profile_pictures'
  warehouse_images_directory: '%kernel.project_dir%/public/images/Warehouse'
  avatar_directory: '%kernel.project_dir%/public/uploads/avatars'
  sendgrid.api_key: '%env(SENDGRID_API_KEY)%'
  sendgrid.template_id: '%env(SENDGRID_TEMPLATE_ID)%'
  pdfgeneratorapi.api_key: '%env(PDFGENERATORAPI_API_KEY)%'
  pdfgeneratorapi.api_secret: '%env(PDFGENERATORAPI_API_SECRET)%'
  pdfgeneratorapi.template_id: '%env(PDFGENERATORAPI_TEMPLATE_ID)%'
  images_directory: '%kernel.project_dir%/public/images'
  locale: 'en'
services:
    App\Security\UserChecker:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
   
    App\Service\AvatarService: ~

    # Twig global
    App\Twig\AvatarExtension:
        tags: ['twig.extension']
    
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    # Explicitly configure the SentimentAnalysisService
    App\Service\SentimentAnalysisService:
        arguments:
            $apiUrl: '%env(SENTIMENT_API_URL)%'
            $httpClient: '@Symfony\Contracts\HttpClient\HttpClientInterface'
        autowire: true
        autoconfigure: true

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Security\LoginSuccessHandler:
        arguments:
            $router: '@router'
    
 
    # No special configuration needed for FaceAuthenticator - autowiring will handle it

    
    # Explicitly configure the KeyTermExtractor service
    App\Services\KeyTermExtractor:
        public: true

    Symfony\Contracts\HttpClient\HttpClientInterface:
        factory: ['Symfony\Component\HttpClient\HttpClient', 'create']

    # Explicitly configure the GeminiService
    App\Services\GeminiService:
        public: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
