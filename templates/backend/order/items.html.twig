{% extends 'backend/baseBack.html.twig' %}

{% block content %}
<div class="container mt-4">
    
    
    <!-- Create Item Button -->
    <a href="{{ path('create_item') }}" class="btn btn-success btn-sm mb-3">Create New Item</a>
    
    <!-- Items Table Container -->
    <div class="table-container" style="max-height: 400px; overflow-y: auto;">
        <table class="table table-sm table-bordered mb-1">
            <thead class="thead-dark" style="position: sticky; top: 0; z-index: 1;">
                <tr>
                    <th style="width: 5%; text-align: center;">ID</th>
                    <th style="width: 20%; text-align: center;">Name</th>
                    <th style="width: 10%; text-align: center;">Quantity Diff</th>
                    <th style="width: 10%; text-align: center;">Price/Unit</th>
                    <th style="width: 15%; text-align: center;">Category</th>
                    <th style="width: 10%; text-align: center;">Order Count</th>
                    <th style="width: 10%; text-align: center;">Actions</th>
                </tr>
            </thead>
            <tbody>
                {% set groupedItems = {} %}
                {% set categoryColors = {} %}
                {% set colorIndex = 0 %}
                {% set colors = ['#e6f7ff', '#fff7e6', '#f9e6ff', '#e6ffe6', '#ffe6e6', '#e6e6ff'] %}
                
                {% for item in items %}
                    {% if item.categoryItem not in categoryColors|keys %}
                        {% set categoryColors = categoryColors|merge({(item.categoryItem): colors[colorIndex % colors|length]}) %}
                        {% set colorIndex = colorIndex + 1 %}
                    {% endif %}
                    
                    {% if item.nameItem not in groupedItems|keys %}
                        {% set groupedItems = groupedItems|merge({
                            (item.nameItem): {
                                'id': item.idItem,
                                'name': item.nameItem,
                                'totalQuantity': item.quantityItem,
                                'price': item.pricePerUnitItem,
                                'category': item.categoryItem,
                                'orderCount': 1,
                                'ids': [item.idItem]
                            }
                        }) %}
                    {% else %}
                        {% set groupedItems = groupedItems|merge({
                            (item.nameItem): groupedItems[item.nameItem]|merge({
                                'totalQuantity': groupedItems[item.nameItem].totalQuantity + item.quantityItem,
                                'orderCount': groupedItems[item.nameItem].orderCount + 1,
                                'ids': groupedItems[item.nameItem].ids|merge([item.idItem])
                            })
                        }) %}
                    {% endif %}
                {% endfor %}

                {% for key, groupedItem in groupedItems %}
                    {% set quantityData = itemQuantities[groupedItem.name] ?? null %}
                    {% set adminQty = quantityData ? quantityData.adminQuantity : 0 %}
                    {% set clientQty = quantityData ? quantityData.clientQuantity : 0 %}
                    {% set difference = adminQty - clientQty %}
                    
                    <tr style="background-color: {{ categoryColors[groupedItem.category] }};">
                        <td style="text-align: center;">{{ groupedItem.id }}</td>
                        <td>{{ groupedItem.name }}</td>
                        <td style="text-align: center;">
                            {{ difference }}
                        </td>
                        <td style="text-align: center;">{{ groupedItem.price|number_format(2) }} TND</td>
                        <td style="text-align: center;">{{ groupedItem.category }}</td>
                        <td style="text-align: center;">{{ groupedItem.orderCount }}</td>
                        <td style="text-align: center;" class="py-1">
                            <div class="d-flex justify-content-center gap-1">
                                <a href="{{ path('edit_item', { id: groupedItem.id }) }}" class="btn btn-primary btn-sm py-0 px-2 edit-item-btn" data-id="{{ groupedItem.id }}">
                                Edit
                             </a>
                             <a href="{{ path('item_delete', {'idItem': groupedItem.id}) }}" class="btn btn-danger btn-sm py-0 px-2" 
                             onclick="return confirm('Are you sure you want to delete this item?');">Delete</a>                            </div>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="7" class="text-center py-2">No items found.</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <!-- Edit Modal -->
<div class="modal fade" id="editItemModal" tabindex="-1" role="dialog" aria-labelledby="editItemModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header py-2">
        <h5 class="modal-title" id="editItemModalLabel">Edit Item</h5>
        <button type="button" class="close btn btn-sm" data-bs-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body py-2" id="editItemModalBody">
        <!-- Form will be injected here via AJAX -->
        <div class="text-center">
            <div class="spinner-border text-primary" role="status"></div>
        </div>
      </div>
    </div>
  </div>
</div>

</div>

<style>
.table-container {
    scroll-behavior: smooth;
    font-size: 0.9rem;
}
.table-sm th, .table-sm td {
    padding: 0.4rem;
}
.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.85rem;
    line-height: 1.4;
    border-radius: 0.25rem;
    min-width: 55px;
}
.table-sm td {
    vertical-align: middle;
}
.small {
    font-size: 0.8rem;
}
.fw-bold {
    font-weight: bold;
}
.text-success {
    color: #28a745;
}
.text-danger {
    color: #dc3545;
}
</style>

<script>
$(document).ready(function() {
    // Auto-adjust height to show about 7-8 rows
    const tableContainer = $('.table-container');
    if (tableContainer.length) {
        const firstRow = tableContainer.find('tbody tr:first');
        if (firstRow.length) {
            const rowHeight = firstRow.outerHeight();
            tableContainer.css('max-height', (rowHeight * 8) + 'px');
        }
    }
});

$(document).on('click', '.edit-item-btn', function(e) {
    e.preventDefault();

    const url = $(this).attr('href');
    const modal = $('#editItemModal');
    const modalBody = $('#editItemModalBody');

    modal.modal('show');
    modalBody.html('<div class="text-center"><div class="spinner-border text-primary" role="status"></div></div>');

    $.ajax({
        url: url,
        type: 'GET',
        success: function(response) {
            modalBody.html(response);
        },
        error: function() {
            modalBody.html('<div class="alert alert-danger">Failed to load form.</div>');
        }
    });
});

$(document).ready(function () {
    $('.delete-item-btn').on('click', function () {
        const itemId = $(this).data('id');

        if (confirm('Are you sure you want to delete this item?')) {
            $.ajax({
                url: `/item/delete/${itemId}`,
                type: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload(); // Refresh to remove the item row
                    } else {
                        alert('Failed to delete item: ' + response.message);
                    }
                },
                error: function () {
                    alert('An error occurred during the delete operation.');
                }
            });
        }
    });
});

    
</script>
{% endblock %}