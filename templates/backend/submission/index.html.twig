{% extends 'backend/baseBack.html.twig' %}

{% block title %}Submissions{% endblock %}

{% block css %}
    {{ parent() }}
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap4.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Custom badge colors for different statuses */
        .badge-pending {
            background-color: #4e73df; /* Primary blue */
            color: white;
        }
        
        .badge-approved {
            background-color: #36b9cc; /* Light blue */
            color: white;
        }
        
        .badge-responded {
            background-color: #1c4f9c; /* Dark blue */
            color: white;
        }

        /* Custom badge colors for urgency levels */
        .badge-urgency-low {
            background-color: #4e73df; /* Primary blue */
            color: white;
        }
        
        .badge-urgency-medium {
            background-color: #36b9cc; /* Light blue */
            color: white;
        }
        
        .badge-urgency-high {
            background-color: #1c4f9c; /* Dark blue */
            color: white;
        }

        /* Compact table styles */
        .table {
            font-size: 0.85rem;
        }
        
        .table td, .table th {
            padding: 0.5rem;
            vertical-align: middle;
        }

        /* Smaller buttons */
        .btn-sm {
            padding: 0.2rem 0.5rem;
            font-size: 0.75rem;
            line-height: 1.4;
        }

        /* Table header - restore blue style */
        #submissionsTable thead tr {
            background: linear-gradient(180deg, #4e73df 0%, #224abe 100%);
            color: white;
        }

        #submissionsTable thead th {
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border: none;
            padding: 0.75rem;
            vertical-align: middle;
        }

        /* Sentiment Analysis Modal Styles */
        .sentiment-badge {
            padding: 8px 12px;
            border-radius: 4px;
            color: white;
            font-weight: bold;
            display: inline-block;
            margin: 5px 0;
        }

        .sentiment-details {
            margin-top: 15px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 4px;
        }

        .sentiment-meter {
            height: 10px;
            background-color: #e9ecef;
            border-radius: 5px;
            margin: 10px 0;
        }

        .sentiment-meter-fill {
            height: 100%;
            border-radius: 5px;
            transition: width 0.3s ease;
        }

        /* Priority Scoring Button Styles */
        .priority-score-btn {
            background-color: #6f42c1;
            color: white;
        }
        
        .priority-score-btn:hover {
            background-color: #5a32a3;
            color: white;
        }

        /* Priority Score Modal Styles */
        .priority-score-modal .modal-content {
            border-radius: 8px;
        }

        .priority-score-modal .modal-header {
            background-color: #6f42c1;
            color: white;
            border-radius: 8px 8px 0 0;
        }

        .priority-score-modal .modal-body {
            padding: 20px;
        }

        .priority-score-result {
            padding: 15px;
            border-radius: 5px;
            margin-top: 15px;
        }

        .priority-score-high {
            background-color: #dc3545;
            color: white;
        }

        .priority-score-medium {
            background-color: #ffc107;
            color: black;
        }

        .priority-score-low {
            background-color: #28a745;
            color: white;
        }

        /* Gemini Response Styles */
        .gemini-response-content {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 20px;
            margin-top: 15px;
        }

        .gemini-response-content h6 {
            color: #2d3748;
            font-weight: 600;
            margin-bottom: 15px;
        }

        .response-text {
            white-space: pre-wrap;
            line-height: 1.6;
            color: #4a5568;
        }

        .gemini-ai-btn {
            padding: 2px 6px;
            margin-left: 8px;
            border-radius: 4px;
        }

        .gemini-ai-btn svg {
            width: 14px;
            height: 14px;
        }

        .key-terms-modal .modal-content {
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .key-terms-modal .modal-header {
            border-radius: 8px 8px 0 0;
            padding: 1rem;
        }

        .key-terms-modal .modal-body {
            padding: 1.5rem;
        }

        .key-terms-modal .terms-list {
            min-height: 100px;
        }

        .key-terms-modal .term-badge {
            padding: 8px 12px;
            border-radius: 20px;
            background-color: #e3f2fd;
            color: #1976d2;
            font-weight: 500;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 5px;
        }

        .key-terms-modal .term-badge:hover {
            background-color: #bbdefb;
            transform: translateY(-2px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .key-terms-modal .term-badge i {
            font-size: 0.8em;
        }

        .key-terms-modal .key-terms-footer {
            border-top: 1px solid #eee;
            padding-top: 1rem;
        }
    </style>
{% endblock %}

{% block content %}
    <div class="container-fluid">
        <!-- Page Heading -->
        <div class="d-sm-flex align-items-center justify-content-between mb-4">
            <h1 class="h3 mb-0 text-gray-800">Submissions Management</h1>
            <a href="{{ path('app_submission_kanban') }}" class="btn btn-primary btn-sm">
                <i class="fas fa-columns"></i> Kanban View
            </a>
        </div>

        <div class="card mb-4">
            <div class="card-body bg-light">
                <form id="filterForm" method="get" class="form-inline">
                    <div class="form-group mr-3 mb-2">
                        <select class="form-control form-control-sm" name="status">
                            <option value="">All Statuses</option>
                            <option value="PENDING" {% if app.request.query.get('status') == 'PENDING' %}selected{% endif %}>Pending</option>
                            <option value="APPROVED" {% if app.request.query.get('status') == 'APPROVED' %}selected{% endif %}>Approved</option>
                            <option value="RESPONDED" {% if app.request.query.get('status') == 'RESPONDED' %}selected{% endif %}>Responded</option>
                        </select>
                    </div>
                    <div class="form-group mr-3 mb-2">
                        <select class="form-control form-control-sm" name="urgency">
                            <option value="">All Urgency Levels</option>
                            <option value="LOW" {% if app.request.query.get('urgency') == 'LOW' %}selected{% endif %}>Low</option>
                            <option value="MEDIUM" {% if app.request.query.get('urgency') == 'MEDIUM' %}selected{% endif %}>Medium</option>
                            <option value="HIGH" {% if app.request.query.get('urgency') == 'HIGH' %}selected{% endif %}>High</option>
                        </select>
                    </div>
                    <div class="form-group mr-3 mb-2">
                        <input type="text" class="form-control form-control-sm" name="keyword" 
                               placeholder="Search descriptions..." value="{{ app.request.query.get('keyword') }}">
                    </div>
                    <button type="submit" class="btn btn-primary btn-sm mb-2">Filter</button>
                </form>
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">All Submissions</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table" id="submissionsTable">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Description</th>
                                <th>Status</th>
                                <th>Urgency</th>
                                <th>Date</th>
                                <th>Contact</th>
                                <th>Appointment</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for submission in submissions %}
                            <tr>
                                <td>{{ submission.idSubmission }}</td>
                                <td>{{ submission.description }}</td>
                                <td>
                                    <span class="badge {% if submission.status == 'PENDING' %}badge-pending{% elseif submission.status == 'APPROVED' %}badge-approved{% else %}badge-responded{% endif %}">
                                        {{ submission.status }}
                                    </span>
                                </td>
                                <td>
                                    <span class="badge {% if submission.urgencyLevel == 'LOW' %}badge-urgency-low{% elseif submission.urgencyLevel == 'MEDIUM' %}badge-urgency-medium{% else %}badge-urgency-high{% endif %}">
                                        {{ submission.urgencyLevel }}
                                    </span>
                                </td>
                                <td>{{ submission.dateSubmission ? submission.dateSubmission|date('Y-m-d') : '' }}</td>
                                <td>{{ submission.preferredContactMethod }}</td>
                                <td>{{ submission.preferredAppointmentDate ? submission.preferredAppointmentDate|date('Y-m-d') : '' }}</td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <button type="button" class="btn btn-sm priority-score-btn" 
                                                data-submission-id="{{ submission.idSubmission }}"
                                                data-description="{{ submission.description|escape('html_attr') }}"
                                                title="Predict Priority">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="14" height="14" fill="currentColor">
                                                <path d="M32 32c17.7 0 32 14.3 32 32V400c0 8.8 7.2 16 16 16H480c17.7 0 32 14.3 32 32s-14.3 32-32 32H80c-44.2 0-80-35.8-80-80V64C0 46.3 14.3 32 32 32zM160 224c17.7 0 32 14.3 32 32v64c0 17.7-14.3 32-32 32s-32-14.3-32-32V256c0-17.7 14.3-32 32-32zm128-64V320c0 17.7-14.3 32-32 32s-32-14.3-32-32V160c0-17.7 14.3-32 32-32s32 14.3 32 32zm64 32c17.7 0 32 14.3 32 32v96c0 17.7-14.3 32-32 32s-32-14.3-32-32V224c0-17.7 14.3-32 32-32z"/>
                                            </svg>
                                        </button>
                                        
                                        <button type="button" class="btn btn-info btn-sm extract-keyterms-btn" 
                                                data-submission-id="{{ submission.idSubmission }}"
                                                title="Extract Key Terms">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="14" height="14" fill="currentColor">
                                                <path d="M336 352c97.2 0 176-78.8 176-176S433.2 0 336 0S160 78.8 160 176c0 18.7 2.9 36.8 8.3 53.7L7 391c-4.5 4.5-7 10.6-7 17v80c0 13.3 10.7 24 24 24h80c13.3 0 24-10.7 24-24v-40h40c13.3 0 24-10.7 24-24v-40h40c6.4 0 12.5-2.5 17-7l33.3-33.3c16.9 5.4 35 8.3 53.7 8.3zm40-176c-22.1 0-40-17.9-40-40s17.9-40 40-40s40 17.9 40 40s-17.9 40-40 40z"/>
                                            </svg>
                                        </button>
                                        
                                        <button type="button" class="btn btn-primary btn-sm analyze-sentiment-btn"
                                                data-submission-id="{{ submission.idSubmission }}"
                                                data-description="{{ submission.description|escape('html_attr') }}"
                                                title="Analyze Sentiment">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="14" height="14" fill="currentColor">
                                                <path d="M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zM96 96H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm0 128H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm0 128H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H96c-17.7 0-32-14.3-32-32s14.3-32 32-32z"/>
                                            </svg>
                                        </button>
                                        
                                        <a href="{{ path('app_response_new', {'idSubmission': submission.idSubmission}) }}" class="btn btn-success btn-sm" title="Add Response">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="14" height="14" fill="currentColor">
                                                <path d="M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM232 344V280H168c-13.3 0-24-10.7-24-24s10.7-24 24-24h64V168c0-13.3 10.7-24 24-24s24 10.7 24 24v64h64c13.3 0 24 10.7 24 24s-10.7 24-24 24H280v64c0 13.3-10.7 24-24 24s-24-10.7-24-24z"/>
                                            </svg>
                                        </a>
                                        
                                        <a href="{{ path('app_submission_edit', {'idSubmission': submission.idSubmission}) }}" class="btn btn-warning btn-sm" title="Edit">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" width="14" height="14" fill="currentColor">
                                                <path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160L0 416c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-96c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 96c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-256c0-17.7 14.3-32 32-32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L96 64z"/>
                                            </svg>
                                        </a>
                                       
                                        <a href="#" class="btn btn-danger btn-sm" title="Delete" onclick="if(confirm('Are you sure you want to delete this submission?')) { document.getElementById('delete-form-{{ submission.idSubmission }}').submit(); }">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="14" height="14" fill="currentColor">
                                                <path d="M135.2 17.7C140.4 7.4 150.7 0 162.3 0H285.7c11.6 0 21.9 7.4 27.1 17.7L336 32H432c8.8 0 16 7.2 16 16s-7.2 16-16 16H416l-21.2 339.3c-1.6 25.4-22.7 44.7-48.1 44.7H101.3c-25.4 0-46.5-19.3-48.1-44.7L32 64H16C7.2 64 0 56.8 0 48s7.2-16 16-16H112L135.2 17.7zM160 96c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16s16-7.2 16-16V112c0-8.8-7.2-16-16-16zm128 0c-8.8 0-16 7.2-16 16v288c0 8.8 7.2 16 16 16s16-7.2 16-16V112c0-8.8-7.2-16-16-16z"/>
                                            </svg>
                                        </a>
                                        <form id="delete-form-{{ submission.idSubmission }}" action="{{ path('app_submission_delete', {'idSubmission': submission.idSubmission}) }}" method="post" style="display: none;">
                                            <input type="hidden" name="_method" value="DELETE">
                                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ submission.idSubmission) }}">
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="8" class="text-center text-muted py-3">No submissions found</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Sentiment Analysis Modal -->
    <div class="modal fade" id="sentimentModal" tabindex="-1" role="dialog" aria-labelledby="sentimentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="sentimentModalLabel">Sentiment Analysis Results</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="sentimentResults">
                        <div class="text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Priority Score Modal -->
    <div class="modal fade priority-score-modal" id="priorityScoreModal" tabindex="-1" role="dialog" aria-labelledby="priorityScoreModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="priorityScoreModalLabel">Priority Score Prediction</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="priorityScoreResults">
                        <div class="text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="applyPriorityBtn">Apply Priority</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Gemini AI Response Modal -->
    <div class="modal fade" id="geminiModal" tabindex="-1" role="dialog" aria-labelledby="geminiModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="geminiModalLabel">AI Response</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="geminiResponse">
                        <div class="text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="submitGeminiResponse">Submit Response</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Key Terms Modal -->
    <div class="modal fade key-terms-modal" id="keyTermsModal" tabindex="-1" role="dialog" aria-labelledby="keyTermsModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-info text-white">
                    <h5 class="modal-title" id="keyTermsModalLabel">
                        <i class="fas fa-key"></i> Key Terms Analysis
                    </h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="key-terms-container">
                        <div class="key-terms-header mb-3">
                            <p class="text-muted">The following key terms were extracted from the submission:</p>
                        </div>
                        <div class="terms-list d-flex flex-wrap gap-2">
                            <!-- Terms will be inserted here -->
                        </div>
                        <div class="key-terms-footer mt-3">
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i>
                                <small>Key terms are automatically extracted based on frequency and importance in the text.</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize DataTable
            $('#submissionsTable').DataTable({
                "order": [[ 1, "desc" ]],
                "pageLength": 5,
                "lengthMenu": [[3, 5, 10, 25], [3, 5, 10, 25]],
                "stateSave": true,
                "stateDuration": 0,
                "language": {
                    "lengthMenu": "Show _MENU_ submissions per page",
                    "zeroRecords": "No submissions found",
                    "info": "Showing page _PAGE_ of _PAGES_",
                    "infoEmpty": "No submissions available",
                    "infoFiltered": "(filtered from _MAX_ total submissions)"
                }
            });

            let currentSubmissionId = null;
            let currentPredictedPriority = null;

            // Handle Extract Key Terms button click
            document.addEventListener('click', function(e) {
                if (e.target.closest('.extract-keyterms-btn')) {
                    const button = e.target.closest('.extract-keyterms-btn');
                    const submissionId = button.dataset.submissionId;
                    
                    // Show loading state
                    button.disabled = true;
                    
                    // Show loading alert
                    Swal.fire({
                        title: 'Extracting Key Terms',
                        text: 'Please wait...',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });
                    
                    // Make AJAX request
                    fetch(`{{ path('app_submission_extract_keyterms', {'idSubmission': 'PLACEHOLDER'}) }}`.replace('PLACEHOLDER', submissionId))
                        .then(response => response.json())
                        .then(response => {
                            Swal.close(); // Close loading alert
                            
                            if (response.success) {
                                if (response.keyTerms && response.keyTerms.length > 0) {
                                    // Show modal with key terms
                                    const modal = new bootstrap.Modal(document.getElementById('keyTermsModal'));
                                    const termsList = document.querySelector('.terms-list');
                                    termsList.innerHTML = response.keyTerms.map(term => 
                                        `<span class="term-badge">
                                            <i class="fas fa-tag"></i>
                                            ${term}
                                        </span>`
                                    ).join('');
                                    modal.show();
                                } else {
                                    Swal.fire({
                                        title: 'No Key Terms Found',
                                        text: 'No significant key terms could be extracted from this submission.',
                                        icon: 'info'
                                    });
                                }
                            } else {
                                Swal.fire('Error', response.error || 'Failed to extract key terms', 'error');
                            }
                        })
                        .catch(error => {
                            Swal.close(); // Close loading alert
                            Swal.fire('Error', 'Failed to extract key terms', 'error');
                            console.error('Error:', error);
                        })
                        .finally(() => {
                            button.disabled = false;
                        });
                }
            });

            // Handle Sentiment Analysis button click
            document.addEventListener('click', function(e) {
                if (e.target.closest('.analyze-sentiment-btn')) {
                    const button = e.target.closest('.analyze-sentiment-btn');
                    const description = button.dataset.description;
                    
                    console.log('Analyzing sentiment for text:', description); // Debug log
                    
                    // Show loading state
                    button.disabled = true;
                    
                    // Show modal with loading spinner
                    const modal = new bootstrap.Modal(document.getElementById('sentimentModal'));
                    modal.show();
                    
                    // Make API request to our Symfony API
                    fetch('/api/sentiment/analyze', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ text: description })
                    })
                    .then(async response => {
                        console.log('Response status:', response.status); // Debug log
                        const responseText = await response.text();
                        console.log('Response text:', responseText); // Debug log
                        
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}, message: ${responseText}`);
                        }
                        
                        try {
                            return JSON.parse(responseText);
                        } catch (e) {
                            console.error('Failed to parse JSON:', e);
                            throw new Error('Invalid JSON response from server');
                        }
                    })
                    .then(data => {
                        console.log('Received data:', data); // Debug log
                        
                        if (!data || typeof data !== 'object') {
                            throw new Error('Invalid response format from server');
                        }
                        
                        // Update modal content with results
                        const resultsHtml = `
                            <div class="sentiment-details">
                                <h4 class="mb-3">Analysis Results</h4>
                                
                                <div class="mb-3">
                                    <strong>Overall Sentiment:</strong>
                                    <span class="sentiment-badge" style="background-color: ${data.color}">
                                        ${data.sentiment}
                                    </span>
                                </div>
                                
                                <div class="mb-3">
                                    <strong>Confidence Level:</strong>
                                    <div class="sentiment-meter">
                                        <div class="sentiment-meter-fill" style="width: ${data.confidence}%; background-color: ${data.color}"></div>
                                    </div>
                                    <small>${data.confidence.toFixed(1)}% confidence</small>
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-6">
                                        <strong>Polarity:</strong>
                                        <p>${data.polarity.toFixed(2)}</p>
                                    </div>
                                    <div class="col-md-6">
                                        <strong>Subjectivity:</strong>
                                        <p>${data.subjectivity.toFixed(2)}</p>
                                    </div>
                                </div>
                                
                                <div class="mt-3">
                                    <strong>Analyzed Text:</strong>
                                    <p class="text-muted">${data.text}</p>
                                </div>
                            </div>
                        `;
                        
                        document.getElementById('sentimentResults').innerHTML = resultsHtml;
                    })
                    .catch(error => {
                        console.error('Error:', error); // Debug log
                        document.getElementById('sentimentResults').innerHTML = `
                            <div class="alert alert-danger">
                                <h5>Error analyzing sentiment</h5>
                                <p>${error.message}</p>
                                <small>Please try again or contact support if the problem persists.</small>
                            </div>
                        `;
                    })
                    .finally(() => {
                        button.disabled = false;
                    });
                }
            });

            // Handle Priority Score button click
            document.addEventListener('click', function(e) {
                if (e.target.closest('.priority-score-btn')) {
                    const button = e.target.closest('.priority-score-btn');
                    const submissionId = button.dataset.submissionId;
                    currentSubmissionId = submissionId;
                    
                    // Show loading state
                    button.disabled = true;
                    
                    // Show modal
                    const modal = new bootstrap.Modal(document.getElementById('priorityScoreModal'));
                    modal.show();
                    
                    // Make API request to predict priority
                    fetch(`/dashboard/submission/${submissionId}/predict-priority`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        currentPredictedPriority = data.predicted_priority;
                        
                        // Update modal content with results
                        const resultsHtml = `
                            <div class="priority-score-result priority-score-${data.predicted_priority.toLowerCase()}">
                                <h4 class="mb-3">Predicted Priority: ${data.predicted_priority}</h4>
                                <p>Based on the submission content and context, this submission has been classified as <strong>${data.predicted_priority}</strong> priority.</p>
                                <p>Click "Apply Priority" to update the submission with this priority level.</p>
                            </div>
                        `;
                        
                        document.getElementById('priorityScoreResults').innerHTML = resultsHtml;
                    })
                    .catch(error => {
                        document.getElementById('priorityScoreResults').innerHTML = `
                            <div class="alert alert-danger">
                                <h5>Error predicting priority</h5>
                                <p>${error.message}</p>
                                <small>Please try again or contact support if the problem persists.</small>
                            </div>
                        `;
                    })
                    .finally(() => {
                        button.disabled = false;
                    });
                }
            });

            // Handle Apply Priority button click
            document.getElementById('applyPriorityBtn').addEventListener('click', function() {
                if (!currentSubmissionId || !currentPredictedPriority) {
                    return;
                }

                // Show loading state
                this.disabled = true;
                
                // Make API request to update priority
                fetch(`{{ path('app_submission_update_priority', {'idSubmission': 'PLACEHOLDER'}) }}`.replace('PLACEHOLDER', currentSubmissionId), {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        priority: currentPredictedPriority
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show success message
                        Swal.fire({
                            title: 'Success!',
                            text: 'Priority level updated successfully',
                            icon: 'success'
                        }).then(() => {
                            // Reload the page to show updated data
                            window.location.reload();
                        });
                    } else {
                        throw new Error(data.error || 'Failed to update priority');
                    }
                })
                .catch(error => {
                    Swal.fire('Error', error.message, 'error');
                })
                .finally(() => {
                    this.disabled = false;
                });
            });
        });
    </script>
{% endblock %}
