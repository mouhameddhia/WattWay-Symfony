{% extends 'backend/baseBack.html.twig' %}


{% block content %}
<link rel="stylesheet" href="{{ asset('css/User/backUser.css') }}">






<div class="card shadow mb-4">
    <div style="display: flex; align-self:center; gap: 20px;">
        <button class="refresh"><a href="{{ path('feedback_list') }}"><svg width="12" height="12" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
            <path d="M463.5 224l8.5 0c13.3 0 24-10.7 24-24l0-128c0-9.7-5.8-18.5-14.8-22.2s-19.3-1.7-26.2 5.2L413.4 96.6c-87.6-86.5-228.7-86.2-315.8 1c-87.5 87.5-87.5 229.3 0 316.8s229.3 87.5 316.8 0c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0c-62.5 62.5-163.8 62.5-226.3 0s-62.5-163.8 0-226.3c62.2-62.2 162.7-62.5 225.3-1L327 183c-6.9 6.9-8.9 17.2-5.2 26.2s12.5 14.8 22.2 14.8l119.5 0z"/>
        </svg></a></button>
        <div class="dropdown">
            <button class="dropdown-button" onclick="toggleDropdownSort()">Sort by</button>
            <div class="dropdown-content" id="dropdownSortMenu">
                <a href="{{ path('feedback_list', {'sort': 'date', 'direction': 'DESC'}) }}">Date (Newest) <svg xmlns="http://www.w3.org/2000/svg" width=12 height=12 viewBox="0 0 320 512"><path fill="#ddd" d="M2 334.5c-3.8 8.8-2 19 4.6 26l136 144c4.5 4.8 10.8 7.5 17.4 7.5s12.9-2.7 17.4-7.5l136-144c6.6-7 8.4-17.2 4.6-26s-12.5-14.5-22-14.5l-72 0 0-288c0-17.7-14.3-32-32-32L128 0C110.3 0 96 14.3 96 32l0 288-72 0c-9.6 0-18.2 5.7-22 14.5z"/></svg></a>
                <a href="{{ path('feedback_list', {'sort': 'date', 'direction': 'ASC'}) }}">Date (Oldest) <svg xmlns="http://www.w3.org/2000/svg" width=12 height=12 viewBox="0 0 320 512"><path fill="#ddd" d="M318 177.5c3.8-8.8 2-19-4.6-26l-136-144C172.9 2.7 166.6 0 160 0s-12.9 2.7-17.4 7.5l-136 144c-6.6 7-8.4 17.2-4.6 26S14.4 192 24 192l72 0 0 288c0 17.7 14.3 32 32 32l64 0c17.7 0 32-14.3 32-32l0-288 72 0c9.6 0 18.2-5.7 22-14.5z"/></svg></a>
                <a href="{{ path('feedback_list', {'sort': 'rating', 'direction': 'DESC'}) }}">Rating (High to Low) <svg xmlns="http://www.w3.org/2000/svg" width=12 height=12 viewBox="0 0 320 512"><path fill="#ddd" d="M2 334.5c-3.8 8.8-2 19 4.6 26l136 144c4.5 4.8 10.8 7.5 17.4 7.5s12.9-2.7 17.4-7.5l136-144c6.6-7 8.4-17.2 4.6-26s-12.5-14.5-22-14.5l-72 0 0-288c0-17.7-14.3-32-32-32L128 0C110.3 0 96 14.3 96 32l0 288-72 0c-9.6 0-18.2 5.7-22 14.5z"/></svg></a>
                <a href="{{ path('feedback_list', {'sort': 'rating', 'direction': 'ASC'}) }}">Rating (Low to High) <svg xmlns="http://www.w3.org/2000/svg" width=12 height=12 viewBox="0 0 320 512"><path fill="#ddd" d="M318 177.5c3.8-8.8 2-19-4.6-26l-136-144C172.9 2.7 166.6 0 160 0s-12.9 2.7-17.4 7.5l-136 144c-6.6 7-8.4 17.2-4.6 26S14.4 192 24 192l72 0 0 288c0 17.7 14.3 32 32 32l64 0c17.7 0 32-14.3 32-32l0-288 72 0c9.6 0 18.2-5.7 22-14.5z"/></svg></a>
            </div>
        </div>
        <div class="dropdown">
            <button class="dropdown-button" onclick="toggleDropdownFilter()">Filter by</button>
            <div class="dropdown-content" id="dropdownFilterMenu">
                <a href="{{ path('feedback_list', {'filter': 'rating', 'value': '5'}) }}">5 Stars</a>
                <a href="{{ path('feedback_list', {'filter': 'rating', 'value': '4'}) }}">4 Stars</a>
                <a href="{{ path('feedback_list', {'filter': 'rating', 'value': '3'}) }}">3 Stars</a>
                <a href="{{ path('feedback_list', {'filter': 'rating', 'value': '2'}) }}">2 Stars</a>
                <a href="{{ path('feedback_list', {'filter': 'rating', 'value': '1'}) }}">1 Star</a>
            </div>
        </div>
        <div class="alignSearchSVG">
            <input type="text" id="searchInput" placeholder="Search..." value="{{ app.request.query.get('search', '') }}" />
            <svg id="searchIconButton" xmlns="http://www.w3.org/2000/svg" style="margin-left:5px;" height="12" width="12" viewBox="0 0 512 512">
                <path fill="#ddd" d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"/>
            </svg>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">All Feedbacks</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
            <table class="table table-hover table-striped shadow" id="dataTable">
                <thead class="thead">
                    <tr>
                        <th>Content</th>
                        <th>Rating</th>
                        <th>Date</th>
                        <th>User</th>
                        <th class="action-column">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for feedback in feedbacks %}
                        <tr>
                            <td class="text-truncate" style="max-width: 200px;" title="{{ feedback.content }}">
                                {{ feedback.content }}
                            </td>
                            <td>
                                {% for i in 1..5 %}
                                    {% if i <= feedback.rating %}
                                        <i class="fas fa-star text-warning"></i>
                                    {% else %}
                                        <i class="far fa-star text-warning"></i>
                                    {% endif %}
                                {% endfor %}
                            </td>
                            <td>{{ feedback.date ? feedback.date|date('Y-m-d H:i') : 'N/A' }}</td>
                            <td>{{ feedback.user.firstNameUser ~ ' ' ~ feedback.user.lastNameUser }}</td>
                            <td class="action-column">
                                <div class="btn-group btn-group-sm">
                                    <a href="{{ path('feedbackdelete', {'idFeedback': feedback.idFeedback}) }}" 
                                       class="btn btn-danger btn-sm" 
                                       title="Delete"
                                       onclick="return confirm('Are you sure you want to delete this feedback?')">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="14" height="14" fill="currentColor">
                                            <path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z"/>
                                        </svg>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="5" class="text-center text-muted py-3">
                                No feedback available
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    
</div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Feedback Rating Distribution</h6>
    </div>
    <div class="card-body">
        <div id="ratingChart" style="min-height: 350px;"></div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
<script>
document.addEventListener("DOMContentLoaded", function() {
    // Initialize the chart
    if (document.querySelector("#ratingChart")) {
        new ApexCharts(document.querySelector("#ratingChart"), {
            series: {{ ratingData|json_encode|raw }},
            chart: { type: 'pie', height: 350 },
            labels: ['1 Star', '2 Stars', '3 Stars', '4 Stars', '5 Stars'],
            colors: ['#FF4560', '#FEB019', '#00E396', '#775DD0', '#008FFB'],
            responsive: [{
                breakpoint: 480,
                options: { chart: { width: 200 }, legend: { position: 'bottom' } }
            }]
        }).render();
    }

    // Dropdown toggle functions
    function toggleDropdownFilter() {
        document.getElementById("dropdownFilterMenu").classList.toggle("show");
    }
    
    function toggleDropdownSort() {
        document.getElementById("dropdownSortMenu").classList.toggle("show");
    }

    // Close dropdowns when clicking outside
    document.addEventListener('click', function(event) {
        if (!event.target.matches('.dropdown-button')) {
            const dropdowns = document.querySelectorAll('.dropdown-content');
            dropdowns.forEach(function(dropdown) {
                if (dropdown.classList.contains('show')) {
                    dropdown.classList.remove('show');
                }
            });
        }
    });

    // Search functionality
    const searchButton = document.getElementById("searchIconButton");
    const searchInput = document.getElementById("searchInput");
    
    function updateURL(params) {
        const url = new URL(window.location.href);
        
        // Clear all existing parameters
        const keys = [];
        url.searchParams.forEach((value, key) => keys.push(key));
        keys.forEach(key => url.searchParams.delete(key));
        
        // Set new parameters
        Object.entries(params).forEach(([key, value]) => {
            if (value) {
                url.searchParams.set(key, value);
            }
        });
        
        window.location.href = url.toString();
    }
    
    function performSearch() {
        updateURL({
            search: searchInput.value.trim(),
            sort: new URL(window.location.href).searchParams.get('sort'),
            direction: new URL(window.location.href).searchParams.get('direction'),
            filter: new URL(window.location.href).searchParams.get('filter'),
            value: new URL(window.location.href).searchParams.get('value')
        });
    }
    
    // Event listeners
    searchButton.addEventListener("click", performSearch);
    searchInput.addEventListener("keydown", function(e) {
        if (e.key === "Enter") performSearch();
    });
    
    // Initialize dropdown buttons
    document.querySelectorAll('.dropdown-button').forEach(button => {
        button.addEventListener('click', function(e) {
            e.stopPropagation();
            const menuId = this.getAttribute('onclick').match(/toggleDropdown(\w+)/)[1];
            document.getElementById(`dropdown${menuId}Menu`).classList.toggle('show');
        });
    });
});
</script>
{% endblock %}


