<script src="{{ asset('front/assets/js/orderFront.js') }}"></script>
<link rel="stylesheet" href="{{ asset('front/assets/css/WattAi.css') }}">
<link rel="stylesheet" href="{{ asset('front/assets/css/order.css') }}">
<script src="https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.9.6/lottie.min.js"></script>


<section id="order" class="order-section">
    <div class="shop-container">
        <!-- Header -->
        <header class="shop-header">
            
            <!-- AI Suggestion -->
            <div class="ai-suggestion-container">
                <button class="ai-suggestion-button" id="suggestedItemsBtn">
                    <svg class="ai-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
                        <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
                        <path d="M10 13a1 1 0 0 0 1-1V9a1 1 0 0 1 1-1h1"></path>
                        <path d="M16 13a1 1 0 0 1-1-1V9a1 1 0 0 0-1-1h-1"></path>
                    </svg>
                    <img src="{{ asset('images/ai-icon.png') }}"  alt="WattAI Icon" >
                </button>
            </div>
            
        </header>

        <!-- Search -->
        <div class="search-container">
            <!-- Action Buttons -->
            <div class="action-buttons">
                <button class="secondary-button" id="viewPreviousOrdersBtn">Order History</button>
            </div>
            
            <div class="search-wrapper" >
                <svg class="search-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="11" cy="11" r="8" ></circle>
                    <line x1="21" y1="21" x2="16.65" y2="16.65" ></line>
                </svg>
                <input type="text" id="searchBar" class="search-input" placeholder="Search items..." aria-label="Search items">
                <select class="category-filter" aria-label="Filter by category">
                    <option value="">All Categories</option>
                    <option value="Electricity">Electricity</option>
                    <option value="Lubricants & Fluids">Lubricants & Fluids</option>
                    <option value="Accessories">Accessories</option>
                    <option value="Body Parts">Body Parts</option>
                    <option value="Exterior">Exterior</option>
                    <option value="Cooling & Heating">Cooling & Heating</option>
                    <option value="Performance Parts">Performance Parts</option>
                    <option value="Mechanics">Mechanics</option>
                </select>
            </div>

            <button class="cart-button" id="viewCartBtn" aria-label="View cart">
                <svg class="cart-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="9" cy="21" r="1"></circle>
                    <circle cx="20" cy="21" r="1"></circle>
                    <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                </svg>
                <span class="cart-count">0</span>
            </button>
        </div>
        
        <!-- Product Grid -->
        <div class="product-grid">
            {% set displayedItems = [] %}
            {% for item in items %}
                {% set quantityData = itemQuantities[item.nameItem] ?? null %}
                {% set adminQty = quantityData ? quantityData.adminQuantity : 0 %}
                {% set clientQty = quantityData ? quantityData.clientQuantity : 0 %}
                {% set difference = adminQty - clientQty %}
                
                {% if item.nameItem not in displayedItems and difference > 0 %}
                    {% set displayedItems = displayedItems|merge([item.nameItem]) %}
                    <article class="product-card"
                        data-name="{{ item.nameItem }}"
                        data-category="{{ item.categoryItem }}"
                        data-price="{{ item.pricePerUnitItem + 5 }}"
                        data-description="Lorem ipsum dolor sit amet."
                        data-image="{{ asset('images/' ~ item.nameItem|lower ~ '.png') }}"
                        data-item-id="{{ item.idItem }}" style="background:white;height:300px;">

                        <div class="product-image-container"height:250px;>
                            <div class="watermarked-wrapper"
                                style="background-image: url('{{ asset(('images/test.png') | imagine_filter('item_watermarked')) }}');
                                    background-position: left 0px bottom 60px;
                                    background-repeat: no-repeat;
                                    background-size: contain;
                                    margin-left:-20px;">
                                <img src="{{ asset('images/' ~ item.nameItem|lower ~ '.png') }}"
                                    class="product-image"
                                    alt="{{ item.nameItem }}"
                                    loading="lazy">
                            </div>

                            
                            <button class="quick-view-button" aria-label="Quick view">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                    <circle cx="12" cy="12" r="3"></circle>
                                </svg>
                            </button>
                        </div>
                        <span class="product-category" style="display:none;">{{ item.categoryItem }}</span>
                        <div class="product-price" style="display:none;">{{ item.pricePerUnitItem + 5|number_format(2) }} TND</div>


                        
                        <div class="me1">
                            <div class="product-info">
                                <h2 class="product-title" style="margin-top:20px;color:#f8f9fc;max-height:20px;min-height:20px;">{{ item.nameItem }}</h2>
                            </div>
                            <button class="add-to-cart-button" data-item-id="{{ item.idItem }}" style="margin-top:-5px;margin-bottom:8px; width:200px; margin-left:40px;margin-top:10px;padding-bottom:10px;">
                                <svg class="cart-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <circle cx="9" cy="21" r="1"></circle>
                                    <circle cx="20" cy="21" r="1"></circle>
                                    <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                                </svg>
                                Add to Cart
                            </button>
                        </div>
                    </article>
                    
                {% endif %}
            {% endfor %}
            
            {% if displayedItems|length == 0 %}
                <div class="no-items-message">
                    <p>No items currently available in stock.</p>
                </div>
            {% endif %}
        </div>
        
        
        <!-- Load More -->
        {% if displayedItems|length > 10 %}
        <div class="load-more-container">
            <button class="load-more-button" id="loadMoreBtn">
                Show More Products
                <svg class="chevron-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <polyline points="6 9 12 15 18 9"></polyline>
                </svg>
            </button>
        </div>
        {% endif %}
    </div>



    <!-- Quick View Dialog -->
    <div id="quickViewModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <div class="modal-image-container">
                <img id="modal-product-image" src="" alt="" class="modal-product-image">
            </div>
            <div class="modal-details">
                <h2 id="modal-product-name" class="product-name"></h2>
                <p id="modal-product-description" class="product-description"></p>
                <div class="product-meta">
                    <div class="meta-item">
                        <span class="meta-label">Category</span>
                        <span id="modal-product-category" class="meta-value"></span>
                    </div>
                    <div class="meta-item price-container">
                        <span class="meta-label">Price</span>
                        <span class="meta-value">
                            <span id="modal-product-price" class="product-price"></span>
                            <span class="product-price">TND</span>
                        </span>
                    </div>
                </div>
                <button class="add-to-cart-button" id="modal-product-id" data-item-id="">
                    <div class="me">
                        <svg class="cart-icon" viewBox="0 0 24 24" width="18" height="18">
                            <path fill="currentColor" d="M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z"/>
                        </svg>Add to Cart
                    </div>
                </button>
            </div>
        </div>
    </div>
    <!-- Quantity Selection Dialog -->
    <div id="quantityDialog" class="dialog-overlay" style="display: none;">
        <div class="dialog-content">
            <h3>Select Quantity</h3>
            <div class="quantity-controls">
                <button class="quantity-btn minus">-</button>
                <input type="number" id="quantityInput" class="quantity-input" value="1" min="1">
                <button class="quantity-btn plus">+</button>
            </div>
            <div class="dialog-buttons">
                <button id="cancelQuantityBtn" class="secondary-button">Cancel</button>
                <button id="confirmQuantityBtn" class="primary-button">Add to Cart</button>
            </div>
        </div>
    </div>

    <!-- Success Message -->
    <div id="successOverlay" class="success-overlay" style="display: none;">
        <div class="success-animation">
          <svg class="success-icon" viewBox="0 0 24 24">
            <path fill="none" stroke="white" stroke-width="3" d="M5 13l4 4L19 7" />
          </svg>
          <p id="successMessage" class="success-message">Item added to cart</p>
        </div>
    </div>

    <!-- Cart Display Dialog -->
    <div id="cartDialog" class="dialog-overlay" style="display: none;">
        <div class="dialog-content cart-content">
            <h3>Your Cart</h3>
            <div id="cartItemsContainer" class="cart-items">
                <!-- Cart items will be displayed here -->
                <p class="empty-cart-message">Your cart is empty</p>
            </div>
            <div class="cart-summary">
                <div class="cart-total">
                    <span>Total:</span>
                    <span id="cartTotal">$0.00</span>
                </div>
                <div class="dialog-buttons">
                    <button id="closeCartBtn" class="secondary-button">Continue Shopping</button>
                    <button id="checkoutBtn" class="primary-button">Checkout</button>
                </div>
            </div>
        </div>
    </div>

    <!-- AI Chat Dialog - Redesigned -->
    <div id="aiChatDialog" class="dialog-overlay" style="display: none;">
        <div class="dialog-content ai-chat-content">
            
            <!-- Chat Header -->
            <div class="ai-chat-header">
                <div class="ai-header-content">
                    <img src="{{ asset('images/ai-icon.png') }}"  alt="WattAI Icon" style="height40px;width:40px;margin-top:10px;">
                    <div class="ai-title-text">
                        <h3 class="gradient-text">WattAI Assistant</h3>
                    </div>
                </div>
                <button id="closeChatBtn" class="close-chat-btn" aria-label="Close chat">
                    <svg viewBox="0 0 24 24" width="20" height="20">
                        <path fill="currentColor" d="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"/>
                    </svg>
                </button>
            </div>
            
            <!-- Main chat container with fixed height and scrollable messages -->
            <div class="ai-chat-main-container">
                <div id="aiChatMessages" class="ai-chat-messages">
                    <div class="ai-welcome-message">
                        <p>Hello! I'm WattAI, your smart energy assistant. How can I help you today?</p>
                        <div class="quick-suggestions">
                            <button class="suggestion-chip" data-prompt="Show me solar panels">Solar panels</button>
                            <button class="suggestion-chip" data-prompt="Recommend batteries">Batteries</button>
                            <button class="suggestion-chip" data-prompt="Help with installation">Installation help</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Fixed footer with input and buttons -->
            <div class="ai-chat-footer-container">
                <div class="ai-chat-input-container">
                    <div class="input-wrapper">
                        <input type="text" id="aiChatInput" class="ai-chat-input" placeholder="Ask WattAI about energy solutions..." autocomplete="off">
                        <button id="aiChatSend" class="ai-chat-send-button" aria-label="Send message">
                            <svg viewBox="0 0 24 24" width="24" height="24">
                                <path fill="currentColor" d="M2,21L23,12L2,3V10L17,12L2,14V21Z" />
                            </svg>
                        </button>
                    </div>
                    <div class="ai-typing-indicator" id="typingIndicator" style="display: none;">
                        <span></span><span></span><span></span>
                    </div>
                </div>
                
                <div class="ai-chat-footer">
                    <button id="quickAccessButton" class="quick-access-button">
                        <svg viewBox="0 0 24 24" width="16" height="16">
                            <path fill="currentColor" d="M13,9H18.5L13,3.5V9M6,2H14L20,8V20A2,2 0 0,1 18,22H6C4.89,22 4,21.1 4,20V4C4,2.89 4.89,2 6,2M11,15V12H9V15H6V17H9V20H11V17H14V15H11Z" />
                        </svg>
                        <span>Quick Action</span>
                    </button>
                    <small class="ai-disclaimer">WattAI may produce inaccurate information</small>
                </div>
            </div>
        </div>
    </div>

    


    <!-- Lottie Overlay -->
    <div id="processingOverlay" class="dialog-overlay" style="display: none;">
        <div id="lottieProcessingContainer" style="width: 300px; height: 300px;"></div>
    </div>

    <div id="orderOverlay" style="display: none;">
        <div id="lottieSuccessContainer" style="width: 300px; height: 300px;"></div>
    </div>


      
      

    
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const quickViewButtons = document.querySelectorAll('.quick-view-button');
        const modal = document.getElementById('quickViewModal');
        const modalImage = document.getElementById('modal-product-image');
        const modalName = document.getElementById('modal-product-name');
        const modalCategory = document.getElementById('modal-product-category');
        const modalPrice = document.getElementById('modal-product-price');
        const modalDescription = document.getElementById('modal-product-description');
        const modalId = document.getElementById('modal-product-id');

        const closeModal = document.querySelector('.close-modal');
        async function getAIGeneratedDescription(itemName) {
            const apiKey = 'AIzaSyA1ZjFW8PkXB6HqhXO9WsWA1_3_GzXO1ks'; // Consider moving this to a config
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${apiKey}`;
            const prompt = `Write a very-short and clear product description for "${itemName}" as if it's displayed on an online store.`;

            const response = await fetch(apiUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    contents: [{
                        parts: [{
                            text: `${prompt}`
                        }]
                    }]
                })
            });

            if (!response.ok) {
                throw new Error(`API error: ${response.status}`);
            }
        

            return await response.json();
        }

        function extractTextFromResponse(response) {
            
            try {
                if (response.candidates && response.candidates[0] && response.candidates[0].content && 
                    response.candidates[0].content.parts && response.candidates[0].content.parts[0]) {
                    return response.candidates[0].content.parts[0].text;
                }
                return "Invalid response format";
            } catch (error) {
                console.error('Error parsing AI response:', error);
                return "Error processing response";
            }
        }
        quickViewButtons.forEach(button => {
            button.addEventListener('click', async () => {
                const productCard = button.closest('.product-card');
    
                const name = productCard.dataset.name;
                const category = productCard.dataset.category;
                const price = productCard.dataset.price;
                const aiDescription = await getAIGeneratedDescription(name);
                const aiTextDescription  = extractTextFromResponse(aiDescription);
                const id = productCard.dataset.itemId;
                const imageSrc = productCard.dataset.image;
    
                modalImage.src = imageSrc;
                modalName.textContent = name;
                modalCategory.textContent = category;
                modalPrice.textContent = parseFloat(price).toFixed(2) ;
                modalDescription.textContent = aiTextDescription;
                modalId.setAttribute('data-item-id', id);

                modal.style.display = 'flex'; // or 'block' depending on your modal styling
            });
        });

        closeModal.addEventListener('click', () => {
            modal.style.display = 'none';
        });
    
        // Optional: Close the modal when clicking outside the content
        window.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.style.display = 'none';
            }
        });
    });
    
</script>
        

<style>
    .product-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
    }

    .product-card:hover .product-info h2 {
        color: #ffc107; /* optional hover color on title */
    }

    .product-card:hover .me1{
        background-color: #2f4db3;

    }

    .me1{
        background:#4e73df;
    }
    .product-card:hover .add-to-cart-button {
        background-color: #d1dbe4; /* changes button background on hover */
        color: black;
    }
    .product-card:hover .me  {
        color: #194a7a;
    }
    .watermarked-wrapper {
        width: 400px;
        height: 400px;
        background-size: contain;
        background-position: center;
        background-repeat: no-repeat;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
  
    
    #orderOverlay {
        position: fixed;
        inset: 0;
        background-color: transparent;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        pointer-events: none;
        animation: fadeIn 0.4s ease;
    }
    
    #processingOverlay {
        position: fixed;
        inset: 0;
        background-color: transparent;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        animation: fadeIn 0.4s ease;
    }
    
    #orderSuccessMessage {
        position: fixed;
        bottom: 40px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #1bb8a8;
        color: white;
        padding: 16px 24px;
        border-radius: 12px;
        font-size: 1.1rem;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
        z-index: 9999;
        animation: fadeInScale 0.4s ease;
    }
    
    @keyframes fadeIn {
        from { opacity: 0 }
        to { opacity: 1 }
    }
    
    @keyframes fadeInScale {
        from { opacity: 0; transform: translateX(-50%) scale(0.9); }
        to { opacity: 1; transform: translateX(-50%) scale(1); }
    }
    
	
      
    /* Overlay */
    .dialog-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(10, 31, 68, 0.6); /* from #0A1F44 with opacity */
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }
    
    /* Dialog Container */
    .dialog-content {
        background-color: #ffffff;
        border-radius: 16px;
        box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
        padding: 2rem 2.5rem;
        max-width: 400px;
        width: 90%;
        text-align: center;
        font-family: 'Segoe UI', Tahoma, sans-serif;
        transition: all 0.3s ease-in-out;
    }
    
    /* Title */
    .dialog-content h3 {
        color: #0A1F44;
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
    }
    
    /* Quantity Controls */
    .quantity-controls {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
    }
    
    .quantity-input {
        width: 60px;
        height: 40px;
        text-align: center;
        font-size: 1.2rem;
        border: 2px solid #1bb8a8;
        border-radius: 8px;
        outline: none;
    }
    
    /* Buttons for + and - */
    .quantity-btn {
        background-color: #1bb8a8;
        color: white;
        border: none;
        font-size: 1.4rem;
        width: 40px;
        height: 40px;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }
    
    .quantity-btn:hover {
        background-color: #1996af;
    }
    
    /* Dialog action buttons */
    .dialog-buttons {
        display: flex;
        justify-content: space-between;
        gap: 1rem;
    }
    
    /* Cancel Button */
    .secondary-button {
        background-color: #e6e0e0;
        color: #0A1F44;
        padding: 0.6rem 1.2rem;
        border: none;
        border-radius: 10px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }
    
    .secondary-button:hover {
        background-color: #d1cbcb;
    }
    
    /* Confirm Button */
    .primary-button {
        background-color: #0A1F44;
        color: #ffffff;
        padding: 0.6rem 1.2rem;
        border: none;
        border-radius: 10px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }
    
    .primary-button:hover {
        background-color: #132ec2;
    }
    
	
	.product-grid {
        display: grid;
        grid-template-columns: repeat(5, minmax(0, 1fr));
        gap: 24px;
        margin-bottom: 30px;
        
    }
    
    .product-card {
        height: 330px;
        width: 270px;
        background: linear-gradient(135deg, #dfe4ea, #f1f2f6);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
    
        border-radius: var(--radius-md);
        overflow: hidden;
        box-shadow: var(--shadow-sm);
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        display: flex;
        flex-direction: column;
        position: relative;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .product-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0) 50%);
        z-index: 1;
        pointer-events: none;
    }
    
    
    .product-card:hover {
        transform: translateY(-5px) scale(1.02);
        box-shadow: var(--shadow-md);
        background: linear-gradient(135deg, #e0f7fa 0%, #b2ebf2 100%);
        border-color: rgba(178, 235, 242, 0.3);
    }
    
    
    
    
    .product-image-container {
        position: relative;
        background: transparent;
        overflow: hidden;
        height: 220px;
    }
    
    .product-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
        padding: 20px;
        transition: var(--transition);
    }
    
    .quick-view-button {
        position: absolute;
        top: 10px;
        right: 10px;
        width: 36px;
        height: 36px;
        background: rgba(255, 255, 255, 0.9);
        border: none;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        opacity: 0;
        transition: var(--transition);
        box-shadow: var(--shadow-sm);
    }
    
    .quick-view-button svg {
        width: 18px;
        height: 18px;
    }
    
    .product-card:hover .quick-view-button {
        opacity: 1;
    }
    
    .product-info{
        text-align:center;
        margin-left:10px;
    }
    .product-details{
        display:grid;
    }
    /* Modal base */
    .modal {
        display: none;
        position: fixed;
        z-index: 9999;
        inset: 0;
        background: rgba(0, 0, 0, 0.6);
        justify-content: center;
        align-items: center;
        animation: fadeIn 0.3s ease;
        backdrop-filter: blur(4px);
    }

    /* Modal content */
    .modal-content {
        background: #fff;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        max-width: 600px;
        width: 90%;
        position: relative;
        display: flex;
        flex-direction: column;
        animation: scaleUp 0.3s ease;
        font-family: 'Inter', 'Segoe UI', sans-serif;
        border: 1px solid rgba(0, 0, 0, 0.1);
    }

    /* Modal image container */
    .modal-image-container {
        margin: -2rem -2rem 1.5rem -2rem;
        border-radius: 12px 12px 0 0;
        overflow: hidden;
        background: #f8f8f8;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 250px;
    }

    .modal-product-image {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
        padding: 1rem;
    }

    /* Modal details */
    .modal-details {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    /* Close button */
    .close-modal {
        position: absolute;
        top: 16px;
        right: 16px;
        font-size: 24px;
        font-weight: 300;
        color: #888;
        cursor: pointer;
        transition: all 0.2s ease;
        background: rgba(255, 255, 255, 0.8);
        width: 32px;
        height: 32px;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10;
    }

    .close-modal:hover {
        color: #333;
        background: rgba(255, 255, 255, 0.9);
        transform: rotate(90deg);
    }

    /* Product name */
    .product-name {
        font-size: 2.4rem;
        font-weight: 600;
        margin: 0;
        color: #222;
    }

    /* Product description */
    .product-description {
        padding-top:15px;
        margin-bottom:15px;
        font-size: 1.6rem;
        line-height: 1.5;
        color: #555;
        margin: 0;
    }

    .product-meta {
        display: grid;
        grid-template-columns: max-content auto;
        gap: 0.8rem 1.2rem;
        align-items: baseline;
        margin: 1rem 0;
    }
    
    .meta-item {
        
        font-weight: 500;
        display: contents; /* Children participate directly in grid */
    }
    
    
    .meta-label {
        font-size: 1.5rem;
        color: #6b7280; /* Softer gray */
        font-weight: 500;
        letter-spacing: 0.4px;
        text-transform: none; /* More user-friendly than uppercase */
        white-space: nowrap;
    }
    
    .meta-value {
        text-align:center;
        border-radius: 12px;
        background-color: #f0f7ff;
        color: #2a7de1;
        font-size: 1.5rem;
        font-weight: 500;
        width:100px;
    }
    
    /* Price container - standout but harmonious */
    .price-container .meta-label {
        color: #4b5563; /* Slightly darker label for price */
    }
    
    .price-container .meta-value {
        color: #059669; /* Fresh, accessible green */
        font-size: 1.4rem;
        font-weight: 600;
    }

    /* Add to cart button */
    .add-to-cart-button {
        background: #3f51b5;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        margin-top: 1rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .add-to-cart-button:hover {
        background: #303f9f;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .add-to-cart-button:active {
        transform: translateY(0);
    }

    .cart-icon {
        margin-right: 6px;
    }

    /* Animations */
    @keyframes fadeIn {
        from { opacity: 0; } 
        to { opacity: 1; }
    }

    @keyframes scaleUp {
        from { transform: scale(0.95); opacity: 0; }
        to { transform: scale(1); opacity: 1; }
    }

    /* Responsive adjustments */
    @media (min-width: 640px) {
        .modal-content {
            flex-direction: row;
            max-width: 700px;
            padding: 0;
        }
        
        .modal-image-container {
            margin: 0;
            border-radius: 12px 0 0 12px;
            width: 45%;
            height: auto;
            min-height: 300px;
        }
        
        .modal-details {
            padding: 2rem;
            width: 55%;
        }
    }
    .success-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(20, 20, 20, 0.6);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        animation: fadeIn 0.3s ease forwards;
    }

    .success-animation {
    background-color: #1bb8a8;
    color: white;
    padding: 30px 50px;
    border-radius: 20px;
    text-align: center;
    transform: scale(0.8);
    opacity: 0;
    animation: scaleFade 0.5s ease forwards;
    }
    
    .success-icon {
    width: 60px;
    height: 60px;
    margin-bottom: 10px;
    stroke: white;
    }
    
    .success-message {
    font-size: 1.5rem;
    font-weight: bold;
    color:white;
    }
    
    @keyframes scaleFade {
    to {
        transform: scale(1);
        opacity: 1;
    }
    }
    
    @keyframes fadeIn {
    to {
        opacity: 1;
    }
    }
</style>
</section>