{% block title %}{{ 'submission.edit'|trans }}{% endblock %}

{% block stylesheets %}
<style>
    .language-switcher {
        position: fixed;
        top: 20px;
        right: 20px;
        background: white;
        padding: 10px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        z-index: 1000;
    }

    .language-switcher a {
        display: inline-block;
        padding: 5px 10px;
        margin: 0 5px;
        text-decoration: none;
        color: #333;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .language-switcher a:hover {
        background: #f0f0f0;
    }

    .language-switcher a.active {
        background: #3b82f6;
        color: white;
    }

    .edit-submission-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 2rem;
        background: linear-gradient(135deg, #ffffff, #f8f9fa);
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        position: relative;
    }

    .progress-bar {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: #e2e8f0;
        z-index: 1000;
    }

    .progress-bar-fill {
        height: 100%;
        width: 0;
        background: linear-gradient(90deg, #3b82f6, #2563eb);
        transition: width 0.3s ease;
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0% { opacity: 1; }
        50% { opacity: 0.7; }
        100% { opacity: 1; }
    }

    .edit-submission-title {
        color: #2563eb;
        font-size: 2.25rem;
        margin-bottom: 2rem;
        text-align: center;
        font-weight: 700;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
        animation: slideDown 0.5s ease-out;
    }

    @keyframes slideDown {
        from { transform: translateY(-20px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }

    .form-section {
        padding: 1.5rem;
        background: rgba(255, 255, 255, 0.8);
        border-radius: 8px;
        animation: fadeIn 0.5s ease-out;
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    .form-row {
        margin-bottom: 1.75rem;
        transform-origin: left;
        animation: scaleIn 0.3s ease-out;
    }

    @keyframes scaleIn {
        from { transform: scaleX(0.9); opacity: 0; }
        to { transform: scaleX(1); opacity: 1; }
    }

    .form-row label {
        display: block;
        margin-bottom: 0.75rem;
        color: #1e40af;
        font-weight: 600;
        font-size: 1.1rem;
        transition: color 0.3s ease;
    }

    .form-row input,
    .form-row select,
    .form-row textarea {
        width: 100%;
        padding: 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        transition: all 0.3s ease;
        font-size: 1rem;
        background: white;
    }

    .form-row input:focus,
    .form-row select:focus,
    .form-row textarea:focus {
        border-color: #3b82f6;
        outline: none;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
        transform: translateY(-2px);
    }

    .alert {
        padding: 1rem;
        border-radius: 8px;
        margin-bottom: 1rem;
        animation: slideDown 0.3s ease-out;
    }

    .alert-success {
        background: linear-gradient(135deg, #dcfce7, #bbf7d0);
        border: 1px solid #4ade80;
        color: #166534;
    }

    .alert-danger {
        background: linear-gradient(135deg, #fee2e2, #fecaca);
        border: 1px solid #f87171;
        color: #991b1b;
    }

    .btn {
        padding: 1rem 2rem;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1.1rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
    }

    .btn-primary {
        background: linear-gradient(135deg, #3b82f6, #2563eb);
        color: white;
        border: none;
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #2563eb, #1d4ed8);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(37, 99, 235, 0.2);
    }

    .btn-secondary {
        background: linear-gradient(135deg, #64748b, #475569);
        color: white;
        text-decoration: none;
    }

    .btn-secondary:hover {
        background: linear-gradient(135deg, #475569, #334155);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(71, 85, 105, 0.2);
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const progressBar = document.querySelector('.progress-bar-fill');
    const formInputs = document.querySelectorAll('input, select, textarea');
    const totalFields = formInputs.length;
    let filledFields = 0;

    function updateProgress() {
        filledFields = Array.from(formInputs).filter(input => input.value.trim() !== '').length;
        const progress = (filledFields / totalFields) * 100;
        progressBar.style.width = `${progress}%`;
    }

    formInputs.forEach(input => {
        input.addEventListener('input', updateProgress);
    });

    // Initial progress calculation
    updateProgress();

    const form = document.getElementById('editSubmissionForm');
    
    if (form) {
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Clear any existing messages
            const existingMessages = form.querySelectorAll('.alert');
            existingMessages.forEach(msg => msg.remove());

            try {
                const formData = new FormData(form);
                
                const response = await fetch('{{ path('Front_Submission_edit', {'idSubmission': submission.idSubmission}) }}', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                
                if (result.success) {
                    // Show success message
                    const successMessage = document.createElement('div');
                    successMessage.className = 'alert alert-success';
                    successMessage.textContent = '{{ 'submission.success.updated'|trans }}';
                    form.prepend(successMessage);

                    // Redirect back to submissions list after a delay
                    setTimeout(() => {
                        window.location.href = '{{ path('Front_Submission') }}';
                    }, 1500);
                } else {
                    // Show error message
                    const errorMessage = document.createElement('div');
                    errorMessage.className = 'alert alert-danger';
                    
                    if (result.messages && result.messages.length > 0) {
                        const errorList = document.createElement('ul');
                        result.messages.forEach(msg => {
                            const li = document.createElement('li');
                            li.textContent = msg;
                            errorList.appendChild(li);
                        });
                        errorMessage.appendChild(errorList);
                    } else {
                        errorMessage.textContent = '{{ 'submission.error.validation'|trans }}';
                    }
                    
                    form.prepend(errorMessage);
                }
            } catch (error) {
                console.error('Error:', error);
                const errorMessage = document.createElement('div');
                errorMessage.className = 'alert alert-danger';
                errorMessage.textContent = '{{ 'submission.error.validation'|trans }}';
                form.prepend(errorMessage);
            }
        });
    }
});
</script>
{% endblock %}

{% block body %}
<div class="language-switcher">
    <a href="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')|merge({'_locale': 'en'})) }}" 
       class="{{ app.request.locale == 'en' ? 'active' : '' }}">English</a>
    <a href="{{ path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')|merge({'_locale': 'fr'})) }}"
       class="{{ app.request.locale == 'fr' ? 'active' : '' }}">Fran√ßais</a>
</div>

<div class="edit-submission-container">
    <h1 class="edit-submission-title">{{ 'submission.edit'|trans }}</h1>

    <div class="progress-bar">
        <div class="progress-bar-fill"></div>
    </div>

    <div class="form-section">
        {{ form_start(formSubmission, {
            'attr': {
                'id': 'editSubmissionForm',
                'novalidate': 'novalidate'
            }
        }) }}
            <div class="form-row">
                {{ form_row(formSubmission.description, {
                    'label': 'submission.description'|trans,
                    'attr': {'class': 'form-field'}
                }) }}
            </div>
            <div class="form-row">
                {{ form_row(formSubmission.vinCode, {
                    'label': 'submission.vin_code'|trans,
                    'attr': {'class': 'form-field'}
                }) }}
            </div>
            <div class="form-row">
                {{ form_row(formSubmission.idUser, {
                    'label': 'submission.user'|trans,
                    'attr': {'class': 'form-field'}
                }) }}
            </div>
            <div class="form-row">
                {{ form_row(formSubmission.preferredContactMethod, {
                    'label': 'submission.contact_method'|trans,
                    'attr': {'class': 'form-field'}
                }) }}
            </div>
            <div class="form-row">
                {{ form_row(formSubmission.preferredAppointmentDate, {
                    'label': 'submission.appointment_date'|trans,
                    'attr': {'class': 'form-field'}
                }) }}
            </div>
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">{{ 'submission.edit'|trans }}</button>
                <a href="{{ path('Front_Submission') }}" class="btn btn-secondary">{{ 'submission.actions'|trans }}</a>
            </div>
        {{ form_end(formSubmission) }}
    </div>
</div>
{% endblock %}

